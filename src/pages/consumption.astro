---
import BaseLayout from '../layouts/BaseLayout.astro';
import { consumptionData } from '../data/consumption.ts';
---

<BaseLayout title="Consumption" description="Films, books & music I've enjoyed recently." showHeader={false}>
    <h1 class="mb-12 text-2xl leading-tight font-serif italic sm:mb-16 sm:text-4xl">Consumption</h1>

    <ul class="space-y-16 sm:space-y-24">
        {consumptionData.map((item) => (
            <li class="relative aspect-[2/3] w-full max-w-md mx-auto overflow-hidden rounded-md shadow-md consumption-item">
                <img
                    src={item.coverImage ?? 'https://via.placeholder.com/600x900?text=' + encodeURIComponent(item.title)}
                    alt={item.title}
                    loading="lazy"
                    class="absolute inset-0 w-full h-full object-cover object-center transition-transform duration-500 ease-out"
                />
                <div class="absolute inset-0 bg-main/70 backdrop-blur-sm text-main flex flex-col justify-end p-4 opacity-0 transition-opacity duration-500 ease-out details">
                    <h2 class="text-xl font-serif font-medium leading-tight">{item.title}</h2>
                    <p class="mt-1 text-sm italic opacity-80">{item.creator}</p>
                    {item.year && <p class="mt-1 text-xs opacity-60">{item.year}</p>}
                </div>
            </li>
        ))}
    </ul>
</BaseLayout>

<script client:load>
    // Scroll-zoom & reveal effect
    const items = document.querySelectorAll('.consumption-item');
    function onScroll() {
        const viewportCenter = window.innerHeight / 2;
        items.forEach((item) => {
            const rect = item.getBoundingClientRect();
            const itemCenter = rect.top + rect.height / 2;
            const distance = Math.abs(viewportCenter - itemCenter);
            const ratio = Math.max(0, 1 - distance / viewportCenter); // 0â†’1

            // Scale card and inner image
            const cardScale = 0.85 + ratio * 0.15;
            const imgScale = 1 + ratio * 0.05;
            item.style.transform = `scale(${cardScale})`;
            const img = item.querySelector('img');
            if (img) img.style.transform = `scale(${imgScale})`;

            // Reveal details overlay
            const details = item.querySelector('.details');
            if (details) details.style.opacity = ratio > 0.6 ? '1' : '0';
        });
    }
    onScroll();
    window.addEventListener('scroll', onScroll, { passive: true });
</script>